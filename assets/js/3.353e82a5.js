(window.webpackJsonp=window.webpackJsonp||[]).push([[3],{316:function(t,e,a){},317:function(t,e,a){"use strict";a(316)},324:function(t,e,a){"use strict";a.r(e);a(317);var r=a(4),v=Object(r.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("Semantic Versioning(语义化版本表示)是由github起草的统一版本号表示规则。该规则规定了版本号如何表示，如何增加，如何进行比较，不同的版本号意味着什么。")]),t._v(" "),a("h2",{attrs:{id:"语义化规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语义化规范"}},[t._v("#")]),t._v(" 语义化规范")]),t._v(" "),a("h3",{attrs:{id:"控制规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#控制规范"}},[t._v("#")]),t._v(" 控制规范")]),t._v(" "),a("ul",[a("li",[t._v("标准的版本号必须采用 X.Y.Z 的格式，其中 X、Y 和 Z 为非负的整数，且禁止在数字前方补零。X 是"),a("strong",[t._v("主版本号(major version)")]),t._v("、Y 是"),a("strong",[t._v("次版本号(minor version)")]),t._v("、而 Z 为"),a("strong",[t._v("修订号(patch version)")]),t._v("。每个元素必须（MUST）以数值来递增。例如：1.9.1 -> 1.10.0 -> 1.11.0。")]),t._v(" "),a("li",[t._v("标记版本号的软件发行后，禁止改变该版本软件的内容。任何修改都必须以新版本发行。")]),t._v(" "),a("li",[t._v("主版本号为零（0.y.z）的软件处于开发初始阶段，一切都可能随时被改变。这样的公共 API 不应该被视为稳定版。")]),t._v(" "),a("li",[t._v("1.0.0 的版本号用于界定公共 API 的形成。这一版本之后所有的版本号更新都基于公共 API 及其修改内容。")]),t._v(" "),a("li",[t._v("版本的优先层级指的是不同版本在排序时如何比较。判断优先层级时，必须把版本依序拆分为主版本号、次版本号、修订号及先行版本号后进行比较（版本编译信息不在这份比较的列表中）。由左到右依序比较每个标识符，第一个差异值用来决定优先层级：主版本号、次版本号及修订号以数值比较，例如：1.0.0 < 2.0.0 < 2.1.0 < 2.1.1。当主版本号、次版本号及修订号都相同时，改以优先层级比较低的先行版本号决定。例如：1.0.0-alpha < 1.0.0。有相同主版本号、次版本号及修订号的两个先行版本号，其优先层级必须透过由左到右的每个被句点分隔的标识符来比较，直到找到一个差异值后决定：只有数字的标识符以数值高低比较，有字母或连接号时则逐字以 ASCII 的排序来比较。数字的标识符比非数字的标识符优先层级低。若开头的标识符都相同时，栏位比较多的先行版本号优先层级比较高。范例：1.0.0-alpha < 1.0.0-alpha.1 < 1.0.0-alpha.beta < 1.0.0-beta < 1.0.0-beta.2 < 1.0.0-beta.11 < 1.0.0-rc.1 < 1.0.0。")])]),t._v(" "),a("h3",{attrs:{id:"先行版本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#先行版本"}},[t._v("#")]),t._v(" 先行版本")]),t._v(" "),a("p",[t._v("当要发布"),a("strong",[t._v("大版本")]),t._v("或者"),a("strong",[t._v("核定Feature")]),t._v("，但是又不能保证这个版本功能100%正常。这个时候就需要发布先行版本。比如常见的内测版、灰度版本和rc版本。")]),t._v(" "),a("p",[t._v("先行版本号可以被标注在修订版之后，先加上一个连接号再加上一连串以句点分隔的标识符来修饰。标识符必须由 ASCII 字母数字和连接号 [0-9A-Za-z-] 组成，且禁止留白。数字型的标识符禁止在前方补零。先行版的优先级低于相关联的标准版本。被标上先行版本号则表示这个版本并非稳定而且可能无法满足预期的兼容性需求。范例：1.0.0-alpha、1.0.0-alpha.1、1.0.0-0.3.7、1.0.0-x.7.z.92。")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("主版本号.次版本号.修订号-标识符\n")])])]),a("table",[a("thead",[a("tr",[a("th",{staticStyle:{"text-align":"center"}},[t._v("标识符")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("意义")]),t._v(" "),a("th",{staticStyle:{"text-align":"center"}},[t._v("补充")])])]),t._v(" "),a("tbody",[a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("demo")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("demo版本")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("可能用于验证问题的版本")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("dev")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("开发版")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("开发阶段用的，bug 多，体积较大等特点，功能不完善")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("alpha")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("α版本")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("用于内部交流或者测试人员测试，bug较多")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("beta")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("测试版(β版本)")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("较α版本，有较大的改进，但是还是有bug")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("gamma")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("（γ）伽马版本")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("较α和β版本有很大的改进，与稳定版相差无几，用户可使用")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("trial")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("试用版本")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("本软件通常都有时间限制，过期之后用户如果希望继续使用，一般得交纳一定的费用进行注册或购买。有些试用版软件还在功能上做了一定的限制。")])]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("stable")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("稳定版")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}})]),t._v(" "),a("tr",[a("td",{staticStyle:{"text-align":"center"}},[t._v("csp")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("内容安全版本")]),t._v(" "),a("td",{staticStyle:{"text-align":"center"}},[t._v("js库常用")])])])]),t._v(" "),a("h3",{attrs:{id:"更新场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更新场景"}},[t._v("#")]),t._v(" 更新场景")]),t._v(" "),a("p",[a("strong",[t._v("主版本号（major version）")])]),t._v(" "),a("ul",[a("li",[t._v("在有任何不兼容的修改被加入公共 API 时递增，包括次版本号及修订级别的改变")])]),t._v(" "),a("blockquote",[a("p",[t._v("每当主版本号递增时，次版本号和修订号必须归零")])]),t._v(" "),a("p",[a("strong",[t._v("次版本号（minor version）")])]),t._v(" "),a("ul",[a("li",[t._v("在有向下兼容的新功能出现时递增")]),t._v(" "),a("li",[t._v("在任何公共 API 的功能被标记为弃用时也必须递增")]),t._v(" "),a("li",[t._v("也可以在内部程序有大量新功能或改进被加入时递增，其中包括修订级别的改变。")])]),t._v(" "),a("blockquote",[a("p",[t._v("每当次版本号递增时，修订号必须归零。")])]),t._v(" "),a("p",[a("strong",[t._v("修订号（patch version）")])]),t._v(" "),a("ul",[a("li",[t._v("在只做了向下兼容的修正时才递增")])]),t._v(" "),a("blockquote",[a("p",[t._v("这里的修正指的是针对不正确结果而进行的内部修改")])]),t._v(" "),a("h2",{attrs:{id:"规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#规则"}},[t._v("#")]),t._v(" 规则")]),t._v(" "),a("h3",{attrs:{id:"一般规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#一般规则"}},[t._v("#")]),t._v(" 一般规则")]),t._v(" "),a("ul",[a("li",[t._v("< x.x.x 小于某版本")]),t._v(" "),a("li",[t._v("<= x.x.x 小于或等于某版本")]),t._v(" "),a("li",[t._v("> x.x.x 大于某版本")]),t._v(" "),a("li",[t._v(">= x.x.x 大于或等于某版本")]),t._v(" "),a("li",[t._v("= x.x.x 精确等于某版本")])]),t._v(" "),a("blockquote",[a("p",[t._v("除了精确等于某版本外，其他都会选择最接近指定版本号的版本")])]),t._v(" "),a("h3",{attrs:{id:"高级规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#高级规则"}},[t._v("#")]),t._v(" 高级规则")]),t._v(" "),a("h4",{attrs:{id:"破折号策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#破折号策略"}},[t._v("#")]),t._v(" 破折号策略(-)")]),t._v(" "),a("ul",[a("li",[t._v("通常表示左右（包含）两区间的版本")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1.2.3 - 2.3.4 // 代表 >= 1.2.3 && <= 2.3.4之间的版本\n")])])]),a("ul",[a("li",[t._v("如果起始版本（左侧的版本）有空缺，将以0补位")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1.2 - 2.3.4 // 代表 >=1.2.0 && <=2.3.4\n")])])]),a("p",[t._v("如果结尾版本（右侧的版本）有空缺，将以0补位，并且递增非0版本号作为最大版本号")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("1.2.3 - 2.3   // >=1.2.3 && <2.4.0\n1.2.3 - 2     // >=1.2.3 && <3.0.0\n")])])]),a("h4",{attrs:{id:"泛版本策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#泛版本策略"}},[t._v("#")]),t._v(" 泛版本策略(*)")]),t._v(" "),a("ul",[a("li",[t._v("可以使用"),a("strong",[t._v("X")]),t._v("，"),a("strong",[t._v("x")]),t._v(" 或者 *****来作为某个版本号的占位符，来示意所有可能的版本号")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("*     // >= 0.0.0 (所有版本)\n1.x   // >= 1.0.0 <2.0.0 (主版本限定为1的版本)\n1.2.x // >= 1.2.0 <1.3.0（主版本+次版本限定为1.2的版本号）\n")])])]),a("ul",[a("li",[t._v("如果我们版本号有缺损，将为我们自动以占位符填充")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v('""  // 代表 * 即 >= 0.0.0\n1   // 代表 1.x.x 即 >= 1.0.0 < 2.0.0\n1.2 // 代表 1.2.x 即 >= 1.2.0 < 1.3.0\n')])])]),a("h4",{attrs:{id:"波浪策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#波浪策略"}},[t._v("#")]),t._v(" 波浪策略(~)")]),t._v(" "),a("p",[t._v("波浪策略适合小版本迭代，具体规则如下：")]),t._v(" "),a("ul",[a("li",[t._v("如果指定了次版本号，则次版本号递增，否则主版本号递增")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("~1.2.3        // >= 1.2.3 && < 1.(2+1).0\n~1.2          // >=1.2.0 <1.(2+1).0\n~1            // >=1.0.0 <(1+1).0.0\n~0.2.3        // >=0.2.3 <0.(2+1).0\n~0.2          // >=0.2.0 <0.(2+1).0\n~0            // >=0.2.0 <0.(2+1).0\n~1.2.3-beta.2 // >=1.2.3-beta.2 <1.3.0-0\n")])])]),a("h4",{attrs:{id:"倒三角策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#倒三角策略"}},[t._v("#")]),t._v(" 倒三角策略(^)")]),t._v(" "),a("p",[t._v("倒三角策略适合大版本迭代，具体规则如下：")]),t._v(" "),a("ul",[a("li",[t._v("更新主版本号，如果版本号为0，则往下取非0版本号递增，作为最大版本号")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("^1.2.3        // >=1.2.3 <2.0.0-0\n^0.2.3        // >=0.2.3 <0.3.0-0\n^0.0.3        // >=0.0.3 <0.0.4-0\n^1.2.3-beta.2 // >=1.2.3-beta.2 <2.0.0-0\n^0.0.3-beta   // >=0.0.3-beta <0.0.4-0\n")])])]),a("ul",[a("li",[t._v("如果有缺省值，且缺省值之前没有不为0的版本位，则允许缺省值的前一位版本递增")])]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("^0.0.x  // >=0.0.0 <0.1.0-0\n^0.0    // >=0.0.0 <0.1.0-0\n^0.x    // >=0.0.0 <1.0.0-0\n")])])]),a("p",[t._v("参考")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://eminoda.github.io/2021/01/29/npm-semver-strategy/",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何管理 npm 版本号：语义化版本策略 SemVer"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903591690534926#heading-4",target:"_blank",rel:"noopener noreferrer"}},[t._v("Semver(语义化版本号)扫盲"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://segmentfault.com/a/1190000018714929",target:"_blank",rel:"noopener noreferrer"}},[t._v("npm 语义化版本控制"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://semver.org/lang/zh-CN/",target:"_blank",rel:"noopener noreferrer"}},[t._v("语义化版本 2.0.0"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://github.com/npm/node-semver",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-semver"),a("OutboundLink")],1)])])}),[],!1,null,null,null);e.default=v.exports}}]);